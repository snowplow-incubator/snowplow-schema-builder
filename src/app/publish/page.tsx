"use client";

import styles from "./page.module.css";

import { CopyBlock, dracula } from "react-code-blocks";

import { Button } from "@mui/material";
import Grid from "@mui/material/Unstable_Grid2";

export default function PublishPage() {

    return (
      <main className={styles.main}>
        <Grid container spacing={2}>
          <Grid xs={12}>
            <h1>âœ… Tracking design published!</h1>
          </Grid>
          <Grid xs={12}>
            <p>
              Your events and entities have been successfully published and are
              ready to be used!
            </p>
          </Grid>
          <Grid xs={12}>
            <h2 style={{ marginBottom: "10px" }}>What's next?</h2>

            <h3
              id="model-your-tracking-design"
              style={{ marginBottom: "10px" }}
            >
              Model your tracking design
            </h3>

            <p style={{ marginBottom: "10px" }}>
              If you want to see your design come to life you will have to model
              the data. We can provide a tailor-made dbt module that you can
              just plug into your project that is hooked up to the{" "}
              <code>dbt-snowplow-unified</code> package ready to model the data
              generated by the tracking scenario.
            </p>

            <p style={{ marginBottom: "10px" }}>
              To do this you can just press the <code>download</code> button,
              extract the content of the zip file and copy the folder and its
              contents to your dbt project. Make sure you modify the project.yml
              file to align the schemas:
            </p>

            <Button variant="contained" onClick={() => {
              window.open("/onboarding.zip")
            }} color="primary" style={{marginBottom: '10px'}}>
              Download dbt module
            </Button>

            <CopyBlock
              theme={dracula}
              language="yml"
              text={`models:
  your_dbt_project:
    onboarding:
      +schema: &quot;derived&quot;
      +tags: [&quot;snowplow_unified_incremental&quot;, &quot;derived&quot;, &quot;onboarding&quot;]
      scratch:
        +materialized: table
        +schema: &quot;scratch&quot;
        +tags: &quot;scratch&quot;`}
            />

            <p style={{ marginTop: "10px", marginBottom: "10px" }}>
              If you would like to see the data model in action before you have
              the first events arriving in your warehouse you can generate a
              dummy events table to use as a source for the model.
            </p>
            <p style={{ marginBottom: "10px" }}>
              Please input your warehouse parameters then click:{" "}
              <code>generate script</code>{" "}
            </p>
            <p style={{ marginBottom: "10px" }}>
              Once the snippets are populated, plese execute them in your
              warehouse then your are ready to go!
            </p>

            <CopyBlock
              theme={dracula}
              language="sql"
              text={`>--- create base table from existing events table

CREATE TABLE ATOMIC.ONBOARDING_EVENTS_SAMPLE AS

SELECT *
FROM ATOMIC.EVENTS
WHERE COLLECTOR_TSTAMP &gt; CURRENT_DATE-1
LIMIT 9;

-- add the new and helper columns

ALTER TABLE ATOMIC.ONBOARDING_EVENTS_SAMPLE ADD COLUMN unstruct_event_msc_aws_onboarding_event_1 VARIANT 
ALTER TABLE ATOMIC.ONBOARDING_EVENTS_SAMPLE ADD COLUMN nth_value integer 
ALTER TABLE ATOMIC.ONBOARDING_EVENTS_SAMPLE ADD COLUMN unstruct_event_user_1 VARIANT 
ALTER TABLE ATOMIC.ONBOARDING_EVENTS_SAMPLE ADD COLUMN CONTEXTS_COM_SNOWPLOWANALYTICS_SNOWPLOW_WEB_PAGE_1 ARRAY

-- update the table with tailor-made dummy data

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE s
SET event_name = &#39;onboarding_event&#39;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE  set nth_value = prep.rn
FROM  
(
    SELECT  ROW_number() OVER (ORDER BY collector_tstamp) AS rn, event_id
    FROM ATOMIC.ONBOARDING_EVENTS_SAMPLE 
) AS prep
WHERE ATOMIC.ONBOARDING_EVENTS_SAMPLE.event_id = prep.event_id;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET user_id = &#39;user1&#39;,
    unstruct_event_user_1 = [object_construct(&#39;firstName&#39;, &#39;Emma&#39;, &#39;lastName&#39;, &#39;Smith&#39;, &#39;organizationId&#39;, 1, &#39;email&#39;, &#39;emma_smith@company.com&#39;, &#39;jobTitle&#39;, &#39;sales representative&#39;, &#39;accessLevel&#39;, 1)]
WHERE 1=1

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET user_id = &#39;user2&#39;,
    unstruct_event_user_1 = [object_construct(&#39;firstName&#39;, &#39;John&#39;, &#39;lastName&#39;, &#39;Doe&#39;, &#39;organizationId&#39;, 1, &#39;email&#39;, &#39;john_doe@company.com&#39;, &#39;jobTitle&#39;, &#39;data analyst&#39;, &#39;accessLevel&#39;, 1)]
WHERE nth_value = 9

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_start&#39;)]
WHERE nth_value = 1;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_enable_location&#39;)]
WHERE nth_value = 2;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_enable_notifications&#39;)]
WHERE nth_value = 3;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_add_phone_number&#39;)]
WHERE nth_value = 4;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_verify_phone_number&#39;)]
WHERE nth_value = 5;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_add_email&#39;)]
WHERE nth_value = 6;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_agree_terms_and_conditions&#39;)]
WHERE nth_value = 7;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, True, &#39;onboarding_stage&#39;, &#39;onboarding_complete&#39;)]
WHERE nth_value = 8;

UPDATE ATOMIC.ONBOARDING_EVENTS_SAMPLE
SET unstruct_event_msc_aws_onboarding_event_1 = [object_construct(&#39;success&#39;, False, &#39;onboarding_stage&#39;, &#39;onboarding_start&#39;)]
WHERE nth_value = 9;
`}
            />
          </Grid>
        </Grid>
      </main>
    );
}
